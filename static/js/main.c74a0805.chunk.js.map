{"version":3,"sources":["store/reducers/tasksReducer.js","store/reducers/counterReducer.js","store/reducers/rootReducer.js","store/index.js","theme/GlobalStyle.js","theme/mainTheme.js","templates/MainTemplate.js","components/atoms/Heading.js","components/atoms/Paragraph.js","components/molecules/TaskItem.js","components/atoms/Button.js","store/reducers/selectors.js","components/organisms/Tasks.js","components/organisms/Counter.js","store/actions/counterActions.js","views/App.js","index.js"],"names":["initState","tasks","id","title","darkMode","completed","tasksReducer","state","action","type","counter","counterReducer","rootReducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","GlobalStyle","createGlobalStyle","theme","black","white","grey100","grey200","regular","bold","MainTemplate","children","Heading","styled","h1","Paragraph","p","ListItem","li","TaskItem","Button","div","active","css","selectTasks","selectCompletedTasks","createSelector","filter","task","selectCounter","TasksListWrapper","grey","InnerWrapper","TasksList","ul","Tasks","loading","allTasks","filteredTasks","handleAllTasks","setState","handleFilteredTasks","setTimeout","console","log","this","props","completedTasks","onClick","map","key","Component","defaultProps","connect","StyledWrapper","StyledSpan","span","Counter","incrementCounter","setInterval","dispatch","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c74a0805.chunk.js","sourcesContent":["const initState = {\r\n  tasks: [\r\n    {\r\n      id: 1,\r\n      title: 'Rent a car',\r\n      darkMode: false,\r\n      completed: true,\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'Wipe off the dust',\r\n      darkMode: false,\r\n      completed: false,\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'Buy present',\r\n      darkMode: false,\r\n      completed: true,\r\n    },\r\n    {\r\n      id: 4,\r\n      title: 'Clean the flat',\r\n      darkMode: false,\r\n      completed: false,\r\n    },\r\n    {\r\n      id: 5,\r\n      title: 'Pay bills',\r\n      darkMode: false,\r\n      completed: true,\r\n    },\r\n  ],\r\n};\r\n\r\nconst tasksReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default tasksReducer;\r\n","const initState = {\r\n  counter: 0,\r\n};\r\n\r\nconst counterReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'INCREMENT_COUNTER':\r\n      return {\r\n        counter: state.counter + 1,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default counterReducer;\r\n","import { combineReducers } from 'redux';\r\nimport tasks from './tasksReducer';\r\nimport counter from './counterReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  counter,\r\n  tasks,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore } from 'redux';\r\nimport rootReducer from 'store/reducers/rootReducer';\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n);\r\n\r\nexport default store;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n@import url('https://fonts.googleapis.com/css?family=Montserrat:400,700&display=swap');\r\n  *,*::before, *::after {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n\r\n  html {\r\n    font-size: 62.5%;\r\n  }\r\n\r\n  body {\r\n    font-size: 1.6rem;\r\n    font-family: 'Montserrat', sans-serif;\r\n    min-height: 100vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 10px;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","export const theme = {\r\n  black: '#000000',\r\n  white: '#FFFFFF',\r\n  grey100: '#F4F5F6',\r\n  grey200: '#D8D8D8',\r\n  regular: 400,\r\n  bold: 700,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport GlobalStyle from 'theme/GlobalStyle';\r\nimport { theme } from 'theme/mainTheme';\r\n\r\nconst MainTemplate = ({ children }) => (\r\n  <ThemeProvider theme={theme}>\r\n    <GlobalStyle />\r\n    {children}\r\n  </ThemeProvider>\r\n);\r\n\r\nMainTemplate.propTypes = {\r\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.node]).isRequired,\r\n};\r\n\r\nexport default MainTemplate;\r\n","import styled from 'styled-components';\r\n\r\nconst Heading = styled.h1`\r\n  padding: 20px 0;\r\n  text-align: center;\r\n  font-size: 2rem;\r\n  text-transform: uppercase;\r\n  background-color: #000;\r\n  color: #fff;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport default Heading;\r\n","import styled from 'styled-components';\r\n\r\nconst Paragraph = styled.p`\r\n  font-size: 1.6rem;\r\n  font-weight: ${({ theme }) => theme.bold};\r\n  color: #000;\r\n`;\r\n\r\nexport default Paragraph;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Paragraph from 'components/atoms/Paragraph';\r\n\r\nconst ListItem = styled.li`\r\n  width: 100%;\r\n  padding: 20px;\r\n  margin: 15px 0;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  background-color: ${({ theme }) => theme.grey100};\r\n  color: ${({ theme }) => theme.white};\r\n  border-radius: 10px;\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.grey200};\r\n  }\r\n`;\r\n\r\nconst TaskItem = ({ title }) => (\r\n  <ListItem>\r\n    <Paragraph>{title}</Paragraph>\r\n  </ListItem>\r\n);\r\n\r\nTaskItem.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default TaskItem;\r\n","import styled, { css } from 'styled-components';\r\n\r\nconst Button = styled.div`\r\n  flex-basis: 50%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n  padding: 10px;\r\n  font-weight: ${({ theme }) => theme.bold};\r\n  color: ${({ theme }) => theme.grey200};\r\n  text-transform: uppercase;\r\n  cursor: pointer;\r\n  ${({ active }) =>\r\n    active &&\r\n    css`\r\n      color: ${({ theme }) => theme.black};\r\n      border-bottom: 2px solid ${({ theme }) => theme.black};\r\n    `}\r\n`;\r\n\r\nexport default Button;\r\n","import { createSelector } from 'reselect';\r\n\r\nexport const selectTasks = state => state.tasks.tasks;\r\n\r\nexport const selectCompletedTasks = createSelector(selectTasks, tasks => {\r\n  return tasks.filter(task => task.completed);\r\n});\r\n\r\nexport const selectCounter = state => state.counter.counter;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux';\r\nimport Heading from 'components/atoms/Heading';\r\nimport TaskItem from 'components/molecules/TaskItem';\r\nimport Button from 'components/atoms/Button';\r\nimport { selectTasks, selectCompletedTasks } from 'store/reducers/selectors';\r\n\r\nconst TasksListWrapper = styled.div`\r\n  width: 400px;\r\n  min-height: 600px;\r\n  border: 2px solid ${({ theme }) => theme.black};\r\n  background-color: ${({ theme }) => theme.grey};\r\n  @media (orientation: portrait) and (max-width: 600px) {\r\n    width: 95vw;\r\n  }\r\n  @media (orientation: landscape) and (max-width: 768px) {\r\n    width: 95vw;\r\n  }\r\n`;\r\n\r\nconst InnerWrapper = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst TasksList = styled.ul`\r\n  margin: 10px;\r\n  list-style-type: none;\r\n`;\r\n\r\nlet counter = 0;\r\n\r\nclass Tasks extends Component {\r\n  state = {\r\n    loading: true,\r\n    allTasks: true,\r\n    filteredTasks: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    setTimeout(\r\n      () =>\r\n        this.setState({\r\n          loading: false,\r\n        }),\r\n      2000,\r\n    );\r\n  }\r\n\r\n  handleAllTasks = () => {\r\n    this.setState({\r\n      allTasks: true,\r\n      filteredTasks: false,\r\n    });\r\n  };\r\n\r\n  handleFilteredTasks = () => {\r\n    this.setState({\r\n      allTasks: false,\r\n      filteredTasks: true,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    console.log(`Tasks component render ${++counter} time(s)`);\r\n    const { loading, allTasks, filteredTasks } = this.state;\r\n    const { tasks, completedTasks, children } = this.props;\r\n    return (\r\n      <TasksListWrapper>\r\n        {children}\r\n        <Heading>Tasks list</Heading>\r\n        <InnerWrapper>\r\n          <Button onClick={this.handleAllTasks} active={allTasks}>\r\n            All tasks\r\n          </Button>\r\n          <Button onClick={this.handleFilteredTasks} active={filteredTasks}>\r\n            Completed tasks\r\n          </Button>\r\n        </InnerWrapper>\r\n        {!loading ? (\r\n          <TasksList>\r\n            {allTasks ? (\r\n              <>\r\n                {tasks.map(({ id, title }) => (\r\n                  <TaskItem key={id} id={id} title={title} />\r\n                ))}\r\n              </>\r\n            ) : null}\r\n            {filteredTasks ? (\r\n              <>\r\n                {completedTasks.map(({ id, title }) => (\r\n                  <TaskItem key={id} id={id} title={title} />\r\n                ))}\r\n              </>\r\n            ) : null}\r\n          </TasksList>\r\n        ) : null}\r\n      </TasksListWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nTasks.propTypes = {\r\n  tasks: PropTypes.arrayOf(PropTypes.object),\r\n  completedTasks: PropTypes.arrayOf(PropTypes.object),\r\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.node]).isRequired,\r\n};\r\n\r\nTasks.defaultProps = {\r\n  tasks: [],\r\n  completedTasks: [],\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tasks: selectTasks(state),\r\n    completedTasks: selectCompletedTasks(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Tasks);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux';\r\nimport { incrementCounter as incrementCounterAction } from 'store/actions/counterActions';\r\nimport { selectCounter } from 'store/reducers/selectors';\r\n\r\nconst StyledWrapper = styled.div`\r\n  text-align: center;\r\n  background-color: ${({ theme }) => theme.black};\r\n  color: ${({ theme }) => theme.white};\r\n`;\r\n\r\nconst StyledSpan = styled.span`\r\n  font-weight: ${({ theme }) => theme.bold};\r\n`;\r\n\r\nclass Counter extends Component {\r\n  componentDidMount() {\r\n    const { incrementCounter } = this.props;\r\n    setInterval(() => {\r\n      incrementCounter();\r\n    }, 1000);\r\n  }\r\n\r\n  render() {\r\n    const { counter } = this.props;\r\n    return (\r\n      <StyledWrapper>\r\n        Time on website: <StyledSpan>{counter} sec</StyledSpan>\r\n      </StyledWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nCounter.propTypes = {\r\n  incrementCounter: PropTypes.func.isRequired,\r\n  counter: PropTypes.number.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    counter: selectCounter(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    incrementCounter: () => dispatch(incrementCounterAction()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);\r\n","export const incrementCounter = () => ({\r\n  type: 'INCREMENT_COUNTER',\r\n});\r\n","import React from 'react';\r\nimport MainTemplate from 'templates/MainTemplate';\r\nimport Tasks from 'components/organisms/Tasks';\r\nimport Counter from 'components/organisms/Counter';\r\n\r\nconst App = () => (\r\n  <MainTemplate>\r\n    <Tasks>\r\n      <Counter />\r\n    </Tasks>\r\n  </MainTemplate>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from 'store';\r\nimport App from 'views/App';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}